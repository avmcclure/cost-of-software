{"version":3,"file":"component---src-pages-weighted-scoring-js-ac18c085400b8bd59d8b.js","mappings":"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","sources":["webpack://recoup-time-calculator/./src/components/weighted-scoring/WeightedScoringTable.jsx","webpack://recoup-time-calculator/./src/components/weighted-scoring/weighted-scoring-page.jsx","webpack://recoup-time-calculator/./src/pages/weighted-scoring.js"],"sourcesContent":["import React from 'react';\n\nfunction WeightedScoringTable({\n  solutions,\n  criteria,\n  ratings,\n  editSolution,\n  removeSolution,\n  editCriterion,\n  removeCriterion,\n  editWeight,\n  editRating,\n  addSolution,\n  addCriterion,\n  scores,\n  bestScore,\n  isWeightValid,\n  totalWeight\n}) {\n  return (\n    <>\n      <div className=\"flex gap-4 mb-4\">\n        <button\n          onClick={addSolution}\n          className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition\"\n        >\n          Add Solution\n        </button>\n        <button\n          onClick={addCriterion}\n          className=\"px-4 py-2 rounded transition bg-green-600 text-white hover:bg-green-700\"\n        >\n          Add Criterion\n        </button>\n      </div>\n      <div className=\"overflow-auto\">\n        <table className=\"min-w-full border rounded-lg overflow-hidden shadow-sm\">\n          <thead className=\"bg-gray-100\">\n            <tr>\n              <th className=\"px-3 py-2 text-left\">Criterion</th>\n              <th className=\"px-3 py-2 text-left\">Weight (%)</th>\n              {solutions.map((sol, sIdx) => (\n                <th key={sIdx} className=\"px-3 py-2 text-left\">\n                  <input\n                    value={sol}\n                    onChange={e => editSolution(sIdx, e.target.value)}\n                    className=\"border rounded px-2 py-1 w-28 focus:outline-blue-500\"\n                  />\n                  <button\n                    onClick={() => removeSolution(sIdx)}\n                    disabled={solutions.length <= 1}\n                    className={`ml-2 px-2 py-1 rounded ${solutions.length <= 1 ? 'bg-gray-200 text-gray-400 cursor-not-allowed' : 'bg-red-100 text-red-600 hover:bg-red-200'}`}\n                    title=\"Remove solution\"\n                  >\n                    &minus;\n                  </button>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {criteria.map((c, cIdx) => (\n              <tr key={cIdx} className=\"border-t\">\n                <td className=\"px-3 py-2\">\n                  <input\n                    value={c.name}\n                    onChange={e => editCriterion(cIdx, e.target.value)}\n                    className=\"border rounded px-2 py-1 w-32 focus:outline-blue-500\"\n                  />\n                  <button\n                    onClick={() => removeCriterion(cIdx)}\n                    disabled={criteria.length <= 1}\n                    className={`ml-2 px-2 py-1 rounded ${criteria.length <= 1 ? 'bg-gray-200 text-gray-400 cursor-not-allowed' : 'bg-red-100 text-red-600 hover:bg-red-200'}`}\n                    title=\"Remove criterion\"\n                  >\n                    &minus;\n                  </button>\n                </td>\n                <td className=\"px-3 py-2\">\n                  <input\n                    type=\"number\"\n                    value={c.weight}\n                    min={0}\n                    max={100}\n                    onChange={e => editWeight(cIdx, e.target.value)}\n                    className=\"border rounded px-2 py-1 w-16 focus:outline-blue-500\"\n                  />\n                </td>\n                {solutions.map((_, sIdx) => (\n                  <td key={sIdx} className=\"px-3 py-2\">\n                    <select\n                      value={ratings[cIdx][sIdx]}\n                      onChange={e => editRating(cIdx, sIdx, e.target.value)}\n                      className=\"border rounded px-2 py-1 w-20 text-center focus:outline-blue-500\"\n                    >\n                      {[...Array(10)].map((_, i) => (\n                        <option key={i + 1} value={i + 1}>{i + 1}</option>\n                      ))}\n                    </select>\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n          <tfoot>\n            <tr className=\"bg-blue-50\">\n              <td colSpan={2} className=\"px-3 py-2 font-semibold\">Total Weighted Score</td>\n              {scores.map((score, sIdx) => (\n                <td\n                  key={sIdx}\n                  className={`px-3 py-2 font-semibold text-center ${isWeightValid && score === bestScore ? 'bg-green-100 text-green-700 border-2 border-green-400' : ''}`}\n                >\n                  {isWeightValid ? score.toFixed(2) : 'N/A'}\n                </td>\n              ))}\n            </tr>\n          </tfoot>\n        </table>\n      </div>\n      <div className=\"mt-4 flex flex-col gap-2 items-start\">\n        <span className=\"font-medium\">Total Weight: <span className=\"text-blue-700\">{totalWeight()}%</span></span>\n        {!isWeightValid && (\n          <span className=\"text-red-600 font-semibold\">Weights must add up to 100% for calculations to be valid.</span>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default WeightedScoringTable;\n\n","import React, { useState } from 'react';\nimport clamp from '../../utils/clamp';\nimport WeightedScoringTable from './WeightedScoringTable';\n\nconst initialSolutions = ['Solution 1', 'Solution 2'];\nconst initialCriteria = [\n  { name: 'Monetary', weight: 20 },\n  { name: 'Time', weight: 20 },\n  { name: 'Knowledge', weight: 20 },\n  { name: 'Safety', weight: 20 },\n  { name: 'Satisfaction', weight: 20 }\n];\n\nfunction WeightedScoringPage() {\n  const [solutions, setSolutions] = useState(initialSolutions);\n  const [criteria, setCriteria] = useState(initialCriteria);\n  const [ratings, setRatings] = useState(\n    () => criteria.map(() => solutions.map(() => 1))\n  );\n\n  const addSolution = () => {\n    setSolutions([...solutions, `Solution ${solutions.length + 1}`]);\n    setRatings(ratings.map(row => [...row, 1]));\n  };\n\n  const removeSolution = idx => {\n    if (solutions.length <= 1) return;\n    setSolutions(solutions.filter((_, i) => i !== idx));\n    setRatings(ratings.map(row => row.filter((_, i) => i !== idx)));\n  };\n\n  const editSolution = (idx, name) => {\n    setSolutions(solutions.map((sol, i) => (i === idx ? name : sol)));\n  };\n\n  const addCriterion = () => {\n    setCriteria([...criteria, { name: `Criterion ${criteria.length + 1}`, weight: 0 }]);\n    setRatings([...ratings, solutions.map(() => 1)]);\n  };\n\n  const removeCriterion = idx => {\n    if (criteria.length <= 1) return;\n    setCriteria(criteria.filter((_, i) => i !== idx));\n    setRatings(ratings.filter((_, i) => i !== idx));\n  };\n\n  const editCriterion = (idx, name) => {\n    setCriteria(criteria.map((c, i) => (i === idx ? { ...c, name } : c)));\n  };\n\n  const editWeight = (idx, weight) => {\n    weight = clamp(Number(weight), 0, 100);\n    const otherTotal = criteria.reduce((sum, c, i) => i === idx ? sum : sum + c.weight, 0);\n    if (otherTotal + weight > 100) return;\n    setCriteria(criteria.map((c, i) => (i === idx ? { ...c, weight } : c)));\n  };\n\n  const editRating = (cIdx, sIdx, value) => {\n    value = clamp(Number(value), 1, 10);\n    setRatings(ratings.map((row, i) =>\n      i === cIdx ? row.map((r, j) => (j === sIdx ? value : r)) : row\n    ));\n  };\n\n  const totalWeight = () => criteria.reduce((sum, c) => sum + c.weight, 0);\n\n  const isWeightValid = totalWeight() === 100;\n  const scores = isWeightValid\n    ? solutions.map((_, sIdx) =>\n        criteria.reduce((sum, c, cIdx) => sum + (ratings[cIdx][sIdx] * c.weight / 100), 0)\n      )\n    : solutions.map(() => null);\n  const bestScore = isWeightValid ? Math.max(...scores) : null;\n\n  return (\n    <div className=\"min-h-screen bg-gray-50 flex flex-col items-center p-6\">\n      <div className=\"max-w-4xl w-full bg-white shadow-md rounded-xl p-8 flex flex-col gap-8\">\n        <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">Weighted Scoring Model</h1>\n        <p className=\"text-gray-600 mb-4\">Compare solutions using weighted criteria. Edit names, weights, and ratings inline. The best solution is highlighted.</p>\n        <WeightedScoringTable\n          solutions={solutions}\n          criteria={criteria}\n          ratings={ratings}\n          editSolution={editSolution}\n          removeSolution={removeSolution}\n          editCriterion={editCriterion}\n          removeCriterion={removeCriterion}\n          editWeight={editWeight}\n          editRating={editRating}\n          addSolution={addSolution}\n          addCriterion={addCriterion}\n          scores={scores}\n          bestScore={bestScore}\n          isWeightValid={isWeightValid}\n          totalWeight={totalWeight()}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default WeightedScoringPage;\n","import React from 'react';\nimport WeightedScoringPage from '../components/weighted-scoring/weighted-scoring-page';\n\nexport default function WeightedScoring() {\n  return <WeightedScoringPage />;\n}\n"],"names":["_ref","solutions","criteria","ratings","editSolution","removeSolution","editCriterion","removeCriterion","editWeight","editRating","addSolution","addCriterion","scores","bestScore","isWeightValid","totalWeight","React","className","onClick","map","sol","sIdx","key","value","onChange","e","target","disabled","length","title","c","cIdx","name","type","weight","min","max","_","_toConsumableArray","Array","i","colSpan","score","toFixed","initialSolutions","initialCriteria","setSolutions","useState","setCriteria","setRatings","reduce","sum","Math","apply","WeightedScoringTable","idx","filter","row","Object","assign","clamp","Number","r","j","concat","WeightedScoring","WeightedScoringPage"],"sourceRoot":""}